#!/bin/bash

set -e -o pipefail

source /usr/local/lib/entrypoint.sh

secrets="${EP_SECRETS_ROOT}/ejbca_truststore_password"
if [[ -e "${secrets}" ]] ; then
	generate_password ejbca_truststore
else
	read -p "EJBCA truststore password not found, please provide:" -r -s EJBCA_TRUSTSTORE_PASSWORD
	echo ""
fi

if [[ -z "${EJBCA_TRUSTSTORE_PASSWORD}" ]] ; then
	echo "Unable to retrieve ejbca truststore password!"
	exit 1
fi

truststore="${EJBCA_DATA}/p12/truststore.jks"
[[ -e "${truststore}" ]] && mv "${truststore}" "${truststore}.old"

su --command="cd \"${EJBCA_DATA}\" && \"${EJBCA_HOME}/bin/ejbca.sh\" ca createtruststore --format JKS --password \"${EJBCA_TRUSTSTORE_PASSWORD}\" --truststore \"${truststore}\"" ejbca
chmod 0644 "${truststore}"
chown ejbca:root "${truststore}"

# Deploy to running instance (doesn't always work) ...
install --group root --mode 0644 --owner ejbca "${truststore}" "${JBOSS_HOME}/standalone/configuration/truststore.jks"

# Deploy to location that /opt/keyfactor/bin/internal/after-deployed.sh uses ...
install --group root --mode 0644 --owner ejbca "${truststore}" "${EJBCA_DATA}/secrets/tls/ts/truststore.jks"
install --group root --mode 0640 --owner ejbca /dev/null "${EJBCA_DATA}/secrets/tls/ts/truststore.storepasswd"
echo "${EJBCA_TRUSTSTORE_PASSWORD}" > "${EJBCA_DATA}/secrets/tls/ts/truststore.storepasswd"

ls -l "${truststore}" "${JBOSS_HOME}/standalone/configuration/truststore.jks" "${EJBCA_DATA}/secrets/tls/ts/truststore."*
keytool -list -keystore "${EJBCA_DATA}/secrets/tls/ts/truststore.jks" -storepass "${EJBCA_TRUSTSTORE_PASSWORD}" -storetype JKS

echo "*** JBoss must be restared to apply the changes! ***"

